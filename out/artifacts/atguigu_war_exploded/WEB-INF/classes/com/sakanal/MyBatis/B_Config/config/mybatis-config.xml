<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        标签有编写顺序：
        properties->settings->typeAliases->typeHandlers->objectFactory->objectWrapperFactory
        ->reflectorFactory->plugins->environments->databaseIdProvider->mappers
    -->
    <!--
        1、MyBatis可以使用properties来引入外部properties配置文件的内容
    -->
    <properties resource="com/sakanal/MyBatis/B_Config/properties/druid.properties"></properties>
    <!--
        2、settings包含很多重要的设置项
            setting：用来设置每一个设置项
                    name：设置项名
                    value：设置项取值
    -->
    <settings>
        <!--开启驼峰命名：数据库中为A_Count，类中可以为aCount-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>
    <!--
        3、typeAliases：别名处理器，可以为Java类型起别名（为全类名起别名）
            别名不区分大小写
    -->
    <typeAliases>
        <!--
            typeAlias：为某个Java类型起别名
                type：指定要起别名的类型（全类名）；默认别名是类名小写；
                alias：指定新的别名
        -->
        <typeAlias type="com.sakanal.MyBatis.B_Config.bean.User" alias="configUser"/>
        <!--
            package：为某个包下的所有类批量起别名
                name：指定包名（为当前包以及所有后代包的每一个类都起一个默认别名（类名小写））
        -->
        <package name="com.sakanal.MyBatis.B_Config.bean"/>
        <!--批量起别名的情况下，使用@Alias注解为某个类型指定新的别名-->
    </typeAliases>
    <!--
        4、environments：mybatis可以配置多种环境；default指定使用某种环境。可以达到快速切换环境
            environment：配置一个具体的环境信息；必须有两个标签；id代表当前环境的唯一标识（eg：开发人员数据库和测试数据库）
                transactionManager：事务管理器；
                    type：事务管理器的类型；JDBC|MANAGED
                        可以自定义事务管理器：实现TransactionFactory接口.type指定为全类名
                dataSource：数据源
                    type：数据源类型；UNPOOLED（UnpooledDataSourceFactory）
                                   POOLED（PooledDataSourceFactory）
                                   JNDI（JndiDataSourceFactory）
                          自定义数据源：实现DataSourceFactory接口，type是全类名
    -->
    <environments default="development">
        <environment id="">
            <transactionManager type=""></transactionManager>
            <dataSource type=""></dataSource>
        </environment>

        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED"><!--MaBatis自带的连接池-->
                <property name="driver" value="${druid.driverClassName}"/>
                <property name="url" value="${druid.url}"/>
                <property name="username" value="${druid.username}"/>
                <property name="password" value="${druid.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--
        5、databaseIdProvider:支持多数据库厂商的；
                type="DB_VENDOR"：VendorDatabaseIdProvider
                    作用是得到数据库厂商的标识（驱动自带getDatabaseProductName()），mybatis就能根据数据库厂商标识来执行不同的sql
                    MySQL，Oracle，SQL Server，
    -->
    <databaseIdProvider type="DB_VENDOR">
        <!--为不同的数据库厂商写别名-->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
        <!--在mapper.xml文件中<select id="" resultType="" databaseId="mysql">databaseId里写value值-->
    </databaseIdProvider>


    <!--将我们写好的sql映射文件（UserMapper.xml）一定要注册到全局配置文件（mybatis-config.xml）中-->
    <!--
        6、mappers：将sql映射注册到全局配置中
    -->
    <mappers>
        <!--
            mapper：注册一个sql映射
                1、注册配置文件
                resource：引用类路径下的sql映射文件
                url：引用网络路径或磁盘路径下的sql映射文件
                2、注册接口
                class：引用接口（注册接口）
                    1、有sql映射文件，映射文件名必须和接口同名，并且放在与接口同一目录下
                    2、没有sql映射文件，所有sql都是利用注解写在接口上
                推荐：比较重要的DAO接口写sql映射文件
                     不重要的及简单的DAO接口我为了开发快速可以使用注解
                同一个接口不能同时使用注解和xml，但是同一项目中不同的接口可以同时使用注解和xml
        -->
        <mapper resource="com/sakanal/MyBatis/B_Config/config/UserMapper.xml"/>
        <mapper class="com.sakanal.MyBatis.B_Config.mapper.UserMapperAnnotation"/>

        <!--批量注册(name：是注册的接口的包，不是mapper配置文件的包；UserMapper.xml和UserMapper.java要放在同一位置)-->
<!--        <package name="com.sakanal.MyBatis.B_Config.mapper"/>-->
    </mappers>
</configuration>