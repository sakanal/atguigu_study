<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--  1、配置User类对象的创建  -->
    <!--
            id属性：给对象起唯一标识/别名，不能加特殊符号
            class属性：类全路径（包类路径）
            name属性：作用和id属性一致，可以加特殊符号，用的少

            创建对象时，默认执行无参数的构造方法完成对象的创建
            在User.java类中若只声明了有参构造，无参构造会取消，执行时会报错
      -->
    <bean id="userBean" class="com.sakanal.Spring.IOC.usexml.bean.User"/>

    <!--  2、set方法注入属性  -->
    <bean id="userSet" class="com.sakanal.Spring.IOC.usexml.bean.User">
        <!--
             使用property完成属性注入
             name：类中属性的名称
             value：向属性注入的值

             <null></null>：设置null值
             属性值包含特殊符号
                1.将特殊符号进行转义                eg：<:&lt;   >:&gt;
                2.把带特殊符号的内容写道到CDATA中    eg：<value>   <![CDATA[  <<南京>>  ]]>   </value>
         -->
        <property name="id" value="2019213106"/>
        <property name="name" value="黎海涛"/>
        <property name="password">
            <null/>
        </property>
    </bean>

    <!--  3、有参构造注入属性  -->
    <bean id="userStructure" class="com.sakanal.Spring.IOC.usexml.bean.User">
        <constructor-arg name="id" value="2019213106"/>
        <constructor-arg name="name" value="黎海涛"/>
        <constructor-arg name="password" value="044815"/>
        <constructor-arg name="address" value="江西南昌"/>
    </bean>

    <!--  4、p名称空间注入(了解)  -->
    <!--
        使用p名称空间注入，可以简化基于xml配置方式(基于set方法)：
          添加p名称空间在配置文件中         xmlns:p="http://www.springframework.org/schema/p"
          进行属性的注入
      -->
    <bean id="userP" class="com.sakanal.Spring.IOC.usexml.bean.User" p:id="2019213106" p:name="黎海涛" p:password="044815"/>
</beans>